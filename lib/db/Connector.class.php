<?php

// Generated by Haxe 3.3.0
class db_Connector {
	public function __construct(){}
	static $_connection;
	static function init() {
		$hostName = $_SERVER['SERVER_NAME'];
		db_Connector::$_connection = jp_saken_php_DB::getConnection("pasmo");
	}
	static function select($table, $columns = null, $params = null, $option = null) {
		if($option === null) {
			$option = "";
		}
		if($columns === null) {
			$columns = "id";
		}
		$where = "";
		if($params !== null) {
			$where = db_Utils::getJoined($params, null);
		}
		return db_Connector::selectFully($table, $columns, $where, $option);
	}
	static function selectFully($table, $columns, $where, $option) {
		$tmp = strlen($where) > 0;
		if($tmp) {
			$where = " where " . _hx_string_or_null($where);
		}
		return db_Connector::request("select " . _hx_string_or_null($columns) . " from " . _hx_string_or_null($table) . _hx_string_or_null($where) . _hx_string_or_null($option));
	}
	static function update($table, $data, $params) {
		$tmp = db_Connector::select($table, "id", $params, null);
		$tmp1 = !db_Utils::exists($tmp);
		if($tmp1) {
			db_Connector::insert($table, $data);
			return;
		}
		$tmp2 = "update " . _hx_string_or_null($table) . " set ";
		$tmp3 = db_Utils::getJoined($data, ",");
		$tmp4 = _hx_string_or_null($tmp2) . _hx_string_or_null($tmp3) . " where ";
		$tmp5 = db_Utils::getJoined($params, null);
		db_Connector::request(_hx_string_or_null($tmp4) . _hx_string_or_null($tmp5));
	}
	static function calculate($table, $column, $diff, $params) {
		$set = " set " . _hx_string_or_null($column) . " = " . _hx_string_or_null($column) . " + " . _hx_string_rec($diff, "");
		$tmp = db_Utils::getJoined($params, null);
		db_Connector::request("update " . _hx_string_or_null($table) . _hx_string_or_null($set) . _hx_string_or_null((" where " . _hx_string_or_null($tmp))));
	}
	static function concat($table, $column, $value, $params) {
		$set = " set " . _hx_string_or_null($column) . " = concat_ws(\",\"," . _hx_string_or_null($column) . ",\"" . _hx_string_or_null($value) . "\")";
		$tmp = db_Utils::getJoined($params, null);
		db_Connector::request("update " . _hx_string_or_null($table) . _hx_string_or_null($set) . _hx_string_or_null((" where " . _hx_string_or_null($tmp) . " and length(" . _hx_string_or_null($column) . ") > 0")));
	}
	static function insert($table, $data) {
		$keys = (new _hx_array(array()));
		$values = (new _hx_array(array()));
		{
			$tmp = $data->keys();
			while(true) {
				$tmp1 = !$tmp->hasNext();
				if($tmp1) {
					break;
				}
				$key = $tmp->next();
				$keys->push($key);
				$tmp2 = "\"" . _hx_string_or_null($data->get($key));
				$values->push(_hx_string_or_null($tmp2) . "\"");
				unset($tmp2,$tmp1,$key);
			}
		}
		$tmp3 = "insert into " . _hx_string_or_null($table) . " (";
		$tmp4 = $keys->join(",");
		$tmp5 = _hx_string_or_null($tmp3) . _hx_string_or_null($tmp4) . ") values (";
		$tmp6 = $values->join(",");
		db_Connector::request(_hx_string_or_null($tmp5) . _hx_string_or_null($tmp6) . ")");
	}
	static function delete($table, $id) {
		db_Connector::request("delete from " . _hx_string_or_null($table) . " where id = \"" . _hx_string_or_null($id) . "\"");
	}
	static function request($sql) {
		$resultSet = db_Connector::$_connection->request($sql);
		$tmp = $resultSet->results();
		return jp_saken_php_DB::getJSON($tmp);
	}
	function __toString() { return 'db.Connector'; }
}
