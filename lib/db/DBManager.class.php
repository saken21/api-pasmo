<?php

// Generated by Haxe 3.3.0
class db_DBManager {
	public function __construct(){}
	static function _results() { $args = func_get_args(); return call_user_func_array(self::$_results, $args); }
	static $_results;
	static $CSV_NAME = "pasmo.csv";
	static function getResults($params) {
		db_Connector::init();
		db_DBManager::$_results = _hx_anonymous(array("status" => 0, "message" => "Error: No mode", "result" => null));
		$mode = $params->get("mode");
		$id = $params->get("id");
		$params->remove("mode");
		switch($mode) {
		case "csv":{
			db_DBManager::exportCsv($params->get("data"));
		}break;
		case "delete":{
			db_DBManager::deleteHistory($id);
		}break;
		case "get":{
			if($id === null) {
				$tmp = $params->get("card_id");
				db_DBManager::getList($tmp, $params->get("term"));
			} else {
				db_DBManager::getHistory($id);
			}
		}break;
		case "set":{
			db_DBManager::setHistory($params);
		}break;
		}
		$value = db_DBManager::$_results;
		return haxe_Json::phpJsonEncode($value, null, null);
	}
	static function getList($cardID, $term) {
		if(!db_Utils::existsParams((new _hx_array(array($cardID, $term))))) {
			db_DBManager::$_results->message = "Error: Not enough properties " . "(card_id,term)";
			return;
		}
		$tmp = db_Utils::getThisTerm();
		if((strcmp($term, $tmp)> 0)) {
			db_DBManager::$_results->message = "Error: Invalid Term";
			return;
		}
		$tmp1 = db_table_Balances::get($cardID, $term);
		$tmp2 = db_table_Histories::getList($cardID, $term);
		db_DBManager::$_results->result = _hx_anonymous(array("balance" => $tmp1, "histories" => $tmp2));
		db_DBManager::setSuccess();
	}
	static function getHistory($id) {
		db_DBManager::$_results->result = db_table_Histories::get($id);
		db_DBManager::setSuccess();
	}
	static function setHistory($params) {
		$tmp = !db_Utils::existsInMap($params, (new _hx_array(array("card_id", "term", "price"))));
		if($tmp) {
			db_DBManager::$_results->message = "Error: Not enough properties " . "(card_id,term,price)";
			return;
		}
		$term = $params->get("term");
		$tmp1 = db_Utils::getThisTerm();
		if((strcmp($term, $tmp1)> 0)) {
			db_DBManager::$_results->message = "Error: Invalid Term";
			return;
		}
		$id = $params->get("id");
		$cardID = $params->get("card_id");
		$price = Std::parseInt($params->get("price"));
		$params->remove("id");
		db_table_Histories::set($id, $cardID, $term, $price, $params);
		db_DBManager::setSuccess();
	}
	static function deleteHistory($id) {
		if(!db_Utils::existsParams((new _hx_array(array($id))))) {
			db_DBManager::$_results->message = "Error: Not enough properties " . "(id)";
			return;
		}
		db_table_Histories::delete($id);
		db_DBManager::setSuccess();
	}
	static function exportCsv($data) {
		$tmp = charconv_UTF8ToSJIS::conv($data);
		sys_io_File::saveContent("pasmo.csv", $tmp);
		$tmp1 = php_Web::getURI();
		db_DBManager::$_results->result = _hx_anonymous(array("directory" => $tmp1, "fileName" => "pasmo.csv"));
		db_DBManager::setSuccess();
	}
	static function setSuccess() {
		db_DBManager::$_results->status = 1;
		db_DBManager::$_results->message = "success";
	}
	function __toString() { return 'db.DBManager'; }
}
